#create a column plot to summarize the data
#create threww column plots one for each of three categories and all bands
allentown.col.plot <- ggplot(allentown.summary)+
geom_col(aes(x=c(All.Get.Out, Manchester.Orchestra, The.Front.Bottoms),
y=Category))
#pivot data longer to flip the coordinates
#longer.allentown <- allentown.summary|>
#pivot_longer(cols = everything().
#names_to = )
allentown.col.plot <- ggplot(allentown.summary)+
geom_col(aes(Category[1]),
y=Artist))
#pivot data longer to flip the coordinates
#longer.allentown <- allentown.summary|>
#pivot_longer(cols = everything().
#names_to = )
allentown.col.plot <- ggplot(allentown.summary)+
geom_col(aes(Category[1],
y=Artist))
allentown.col.plot
#pivot data longer to flip the coordinates
#longer.allentown <- allentown.summary|>
#pivot_longer(cols = everything().
#names_to = )
allentown.col.plot <- ggplot(allentown.summary)+
geom_col(aes(Category,
y=Artist))
allentown.col.plot
#pivot data longer to flip the coordinates
#longer.allentown <- allentown.summary|>
#pivot_longer(cols = everything().
#names_to = )
allentown.col.plot <- ggplot(allentown.summary)+
geom_col(aes(Category,
y=All.Get.Out))
allentown.col.plot
#pivot data longer to flip the coordinates
#longer.allentown <- allentown.summary|>
#pivot_longer(cols = everything().
#names_to = )
allentown.col.plot <- ggplot(allentown.summary)+
geom_col(aes(Category,
y=All.Get.Out))+
theme_bw()
allentown.col.plot
allentown.col.plot <- ggplot(allentown.summary)+
geom_col(aes(x = c(All.Get.Out, Manchester.Orchestra, The.Front.Bottoms),
y = Category.slice(1)))+
theme_bw()
allentown.col.plot
allentown.col.plot <- ggplot(allentown.summary)+
geom_col(aes(x = c(All.Get.Out, Manchester.Orchestra, The.Front.Bottoms),
y = slice(1)))+
theme_bw()
allentown.col.plot
#pivot data longer to flip the coordinates
long.allentown.summary <- allentown.summary |>
pivot_longer(cols = -Category,
names_to = "Band",
values_to = "Count")
long.allentown.summary
view(long.allentown.summary)
allentown.col.plot <- ggplot(allentown.summary)+
geom_col(aes(x = c(All.Get.Out, Manchester.Orchestra, The.Front.Bottoms),
y = Category == "Out Of Range"))+
theme_bw()
allentown.col.plot
allentown.col.plot <- ggplot(allentown.summary)+
geom_col(aes(x = Band %in% c(All.Get.Out, Manchester.Orchestra, The.Front.Bottoms),
y = Category == "Out Of Range"))+
theme_bw()
allentown.col.plot
allentown.col.plot <- ggplot(long.allentown.summary)+
geom_col(aes(x = Band %in% c(All.Get.Out, Manchester.Orchestra, The.Front.Bottoms),
y = Category == "Out Of Range"))+
theme_bw()
allentown.col.plot
allentown.col.plot <- ggplot(long.allentown.summary)+
geom_col(aes(x = Band,
y = Count,
fill = Category))+
theme_bw()
allentown.col.plot
allentown.col.plot <- ggplot(long.allentown.summary)+
geom_col(aes(x = Band,
y = Count,
fill = Category == "Out of Range"))+
theme_bw()
allentown.col.plot
allentown.col.plot <- ggplot(long.allentown.summary)+
geom_col(aes(x = Band,
y = Category == "Out of Range"))+
theme_bw()
allentown.col.plot
allentown.col.plot <- ggplot(long.allentown.summary)+
geom_col(aes(x = Band,
y = Count))+
theme_bw()
allentown.col.plot
a
allentown.col.plot <- ggplot(long.allentown.summary)+
geom_col(aes(x = Band,
y = Count,
fill = Category))+
theme_bw()
allentown.col.plot
#filter out of range variables
out.of.range.filter <- long.allentown.summary|>
filter(Category == 'Out of Range')
out.of.range.filter
allentown.col.plot <- ggplot(out.of.range.filter)+
geom_col(aes(x = Band,
y = Count,
fill = Category))+
theme_bw()
allentown.col.plot
allentown.col.plot <- ggplot(out.of.range.filter)+
geom_col(aes(x = Band,
y = Count))+
theme_bw()
allentown.col.plot
allentown.col.plot <- ggplot(out.of.range.filter)+
geom_col(aes(x = Band,
y = Count))+
ylab("Out of Range Count")+
theme_bw()
allentown.col.plot
#out of range column plot
allentown.col.plot <- ggplot(out.of.range.filter)+
geom_col(aes(x = Band,
y = Count))+
ylab("Out of Range Count")+
scale_fill_manual(values = c("All.Get.Out" = "thistle1",
"Manchester.Orchestra" = "lightcyan1",
"The.Front.Bottoms" = "wheat2")) +
theme_bw()
allentown.col.plot
#out of range column plot
allentown.col.plot <- ggplot(out.of.range.filter)+
geom_col(aes(x = Band,
y = Count))+
ylab("Out of Range Count")+
scale_fill_manual(values = c("All.Get.Out" = "thistle1",
"Manchester.Orchestra" = "lightcyan1",
"The.Front.Bottoms" = "wheat2"))+
theme_bw()
allentown.col.plot
?scale_fill_manual
unique(unique(out.of.range.filter$Band))
#out of range column plot
allentown.col.plot <- ggplot(out.of.range.filter)+
geom_col(aes(x = Band,
y = Count))+
ylab("Out of Range Count")+
scale_fill_manual(values = c("All.Get.Out" = "thistle1",
"Manchester.Orchestra" = "lightcyan1",
"The.Front.Bottoms" = "wheat2"))+
theme_bw()
allentown.col.plot
?scale_fill_brewer
#out of range column plot
allentown.col.plot <- ggplot(out.of.range.filter)+
geom_col(aes(x = Band,
y = Count))+
scale_fill_manual(values = c("All.Get.Out" = "thistle1",
"Manchester.Orchestra" = "lightcyan1",
"The.Front.Bottoms" = "wheat2"))+
ylab("Out of Range Count")+
theme_bw()
allentown.col.plot
#filter out of range variables
out.of.range.filter <- long.allentown.summary|>
filter(Category == 'Out of Range')|>
mutate(Band = as.factor(Band))
#out of range column plot
allentown.col.plot <- ggplot(out.of.range.filter)+
geom_col(aes(x = Band,
y = Count))+
scale_fill_manual(values = c("All.Get.Out" = "thistle1",
"Manchester.Orchestra" = "lightcyan1",
"The.Front.Bottoms" = "wheat2"))+
ylab("Out of Range Count")+
theme_bw()
allentown.col.plot
view(out.of.range.filter)
#out of range column plot
allentown.col.plot <- ggplot(out.of.range.filter)+
geom_col(aes(x = Band,
y = Count,
fill = Band))+
scale_fill_manual(values = c("All.Get.Out" = "thistle1",
"Manchester.Orchestra" = "lightcyan1",
"The.Front.Bottoms" = "wheat2"))+
ylab("Out of Range Count")+
theme_bw()
allentown.col.plot
#out of range column plot
allentown.col.plot <- ggplot(out.of.range.filter)+
geom_col(aes(x = Band,
y = Count,
fill = Band))+
scale_fill_manual(values = c("All.Get.Out" = "royalblue1",
"Manchester.Orchestra" = "plum2",
"The.Front.Bottoms" = "purple"))+
ylab("Out of Range Count")+
theme_bw()
#out of range column plot
allentown.col.plot <- ggplot(out.of.range.filter)+
geom_col(aes(x = Band,
y = Count,
fill = Band))+
scale_fill_manual(values = c("All.Get.Out" = "royalblue1",
"Manchester.Orchestra" = "plum2",
"The.Front.Bottoms" = "purple"))+
ylab("Out of Range Count")+
theme_bw()
allentown.col.plot
#out of range column plot
allentown.col.plot <- ggplot(out.of.range.filter)+
geom_col(aes(x = Band,
y = Count,
fill = Band))+
scale_fill_manual(values = c("All.Get.Out" = "royalblue1",
"Manchester.Orchestra" = "plum2",
"The.Front.Bottoms" = "purple"))+
ylab("Out of Range Count")+
labs(fill="")+
theme_bw()
allentown.col.plot
#out of range column plot
allentown.col.plot <- ggplot(out.of.range.filter)+
geom_col(aes(x = Band,
y = Count,
fill = Band))+
scale_fill_manual(values = c("All.Get.Out" = "royalblue1",
"Manchester.Orchestra" = "plum2",
"The.Front.Bottoms" = "purple"))+
ylab("Out of Range Count")+
theme(legend.position = none())+
labs(fill="")+
theme_bw()
#out of range column plot
allentown.col.plot <- ggplot(out.of.range.filter)+
geom_col(aes(x = Band,
y = Count,
fill = Band))+
scale_fill_manual(values = c("All.Get.Out" = "royalblue1",
"Manchester.Orchestra" = "plum2",
"The.Front.Bottoms" = "purple"))+
ylab("Out of Range Count")+
theme(legend.position = "none")+
labs(fill="")+
theme_bw()
allentown.col.plot
#out of range column plot
allentown.col.plot <- ggplot(out.of.range.filter)+
geom_col(aes(x = Band,
y = Count,
fill = Band))+
scale_fill_manual(values = c("All.Get.Out" = "royalblue1",
"Manchester.Orchestra" = "plum2",
"The.Front.Bottoms" = "purple"))+
ylab("Out of Range Count")+
theme(legend.position = "none")+
#labs(fill="")+
theme_bw()
allentown.col.plot
#out of range column plot
allentown.col.plot <- ggplot(out.of.range.filter)+
geom_col(aes(x = Band,
y = Count,
fill = Band))+
scale_fill_manual(values = c("All.Get.Out" = "royalblue1",
"Manchester.Orchestra" = "plum2",
"The.Front.Bottoms" = "purple"))+
ylab("Out of Range Count")+
labs(fill="")+
guides(fill = "none")+
theme_bw()
allentown.col.plot
#out of range column plot
allentown.col.plot <- ggplot(out.of.range.filter)+
geom_col(aes(x = Band,
y = Count,
fill = Band))+
scale_fill_manual(values = c("All.Get.Out" = "royalblue1",
"Manchester.Orchestra" = "plum2",
"The.Front.Bottoms" = "purple"))+
ylab("Out of Range Count")+
guides(fill = "none")+
theme_bw()
allentown.col.plot
long.allentown.summary
#filter outlying variables
outlying.filter <- long.allentown.summary|>
filter(Category == 'Outlying')|>
#out of range column plot
allentown.outlying.col.plot <- ggplot(outlying.filter)+
geom_col(aes(x = Band,
y = Count,
fill = Band))+
scale_fill_manual(values = c("All.Get.Out" = "royalblue1",
"Manchester.Orchestra" = "plum2",
"The.Front.Bottoms" = "purple"))+
ylab("Outlying Count")+
guides(fill = "none")+
theme_bw()
#filter outlying variables
outlying.filter <- long.allentown.summary|>
filter(Category == 'Outlying')|>
#out of range column plot
allentown.outlying.col.plot <- ggplot(outlying.filter)+
geom_col(aes(x = Band,
y = Count,
fill = Band))+
scale_fill_manual(values = c("All.Get.Out" = "royalblue1",
"Manchester.Orchestra" = "plum2",
"The.Front.Bottoms" = "purple"))+
ylab("Outlying Count")+
guides(fill = "none")+
theme_bw()
#filter outlying variables
outlying.filter <- long.allentown.summary|>
filter(Category == 'Outlying')
#out of range column plot
allentown.outlying.col.plot <- ggplot(outlying.filter)+
geom_col(aes(x = Band,
y = Count,
fill = Band))+
scale_fill_manual(values = c("All.Get.Out" = "royalblue1",
"Manchester.Orchestra" = "plum2",
"The.Front.Bottoms" = "purple"))+
ylab("Outlying Count")+
guides(fill = "none")+
theme_bw()
allentown.outlying.col.plot
#filter within range variables
within.range.filter <- long.allentown.summary|>
filter(Category == 'Within Range')
#within range column plot
allentown.outlying.col.plot <- ggplot(within.range.filter)+
geom_col(aes(x = Band,
y = Count,
fill = Band))+
scale_fill_manual(values = c("All.Get.Out" = "royalblue1",
"Manchester.Orchestra" = "plum2",
"The.Front.Bottoms" = "purple"))+
ylab("Within Range Count")+
guides(fill = "none")+
theme_bw()
#within range column plot
allentown.within.range.col.plot <- ggplot(within.range.filter)+
geom_col(aes(x = Band,
y = Count,
fill = Band))+
scale_fill_manual(values = c("All.Get.Out" = "royalblue1",
"Manchester.Orchestra" = "plum2",
"The.Front.Bottoms" = "purple"))+
ylab("Within Range Count")+
guides(fill = "none")+
theme_bw()
allentown.within.range.col.plot
view(long.allentown.summary)
out.of.range.filter <- long.allentown.summary|>
filter(Category == 'Out of Range')
#out of range column plot
allentown.out.of.range.col.plot <- ggplot(out.of.range.filter)+
geom_col(aes(x = Band,
y = Count,
fill = Band))+
scale_fill_manual(values = c("All.Get.Out" = "royalblue1",
"Manchester.Orchestra" = "plum2",
"The.Front.Bottoms" = "purple"))+
ylab("Out of Range Count")+
guides(fill = "none")+
theme_bw()
#filter outlying variables
outlying.filter <- long.allentown.summary|>
filter(Category == 'Outlying')
#outlying column plot
allentown.outlying.col.plot <- ggplot(outlying.filter)+
geom_col(aes(x = Band,
y = Count,
fill = Band))+
scale_fill_manual(values = c("All.Get.Out" = "royalblue1",
"Manchester.Orchestra" = "plum2",
"The.Front.Bottoms" = "purple"))+
ylab("Outlying Count")+
guides(fill = "none")+
theme_bw()
#filter within range variables
within.range.filter <- long.allentown.summary|>
filter(Category == 'Within Range')
#within range column plot
allentown.within.range.col.plot <- ggplot(within.range.filter)+
geom_col(aes(x = Band,
y = Count,
fill = Band))+
scale_fill_manual(values = c("All.Get.Out" = "royalblue1",
"Manchester.Orchestra" = "plum2",
"The.Front.Bottoms" = "purple"))+
ylab("Within Range Count")+
guides(fill = "none")+
theme_bw()
?facet_wrap
p.doughnut.conditional <- ggplot(ggdat)+
geom_bar(aes(x=2,
y=Proportion,
fill=TestResult),
stat="identity")+
coord_polar("y", start=0)+
xlim(0.2, 2.5)+
theme_bw()+
xlab("")+
ylab("")+
labs(fill="")+
facet_wrap(~cognitive.disorder)+
# remove axes that are added
theme(axis.title.x = element_blank(), axis.title.y = element_blank(), axis.text.y = element_blank(), axis.ticks.y = element_blank())
p.doughnut.conditional
long.allentown.summary
#within range column plot
allentown.within.range.col.plot <- ggplot(within.range.filter)+
geom_col(aes(x = Band,
y = Count,
fill = Band))+
scale_fill_manual(values = c("All.Get.Out" = "royalblue1",
"Manchester.Orchestra" = "plum2",
"The.Front.Bottoms" = "purple"))+
ylab("Within Range Count")+
guides(fill = "none")+
facet_wrap(~Category)+
theme_bw()
allentown.within.range.col.plot
allentown.within.range.col.plot <- ggplot(long.allentown.summary)+
geom_col(aes(x = Band,
y = Count,
fill = Band))+
scale_fill_manual(values = c("All.Get.Out" = "royalblue1",
"Manchester.Orchestra" = "plum2",
"The.Front.Bottoms" = "purple"))+
ylab("Within Range Count")+
guides(fill = "none")+
facet_wrap(~Category)+
theme_bw()
allentown.within.range.col.plot
?patchwork
#3 plots combines using facet_wrap()
allentown.within.range.col.plot <- ggplot(long.allentown.summary)+
geom_col(aes(x = Band,
y = Count,
fill = Band))+
scale_fill_manual(values = c("All.Get.Out" = "royalblue1",
"Manchester.Orchestra" = "plum2",
"The.Front.Bottoms" = "purple"))+
ylab("Range Check")+
guides(fill = "none")+
facet_wrap(~Category)+
theme_bw()
allentown.within.range.col.plot
library("patchwork")
#combine graphs using patchwork library
combined.graphs <- allentown.out.of.range.col.plot + allentown.outlying.col.plot +allentown.within.range.col.plot
combined.graphs
#3 plots combines using facet_wrap()
allentown.wrapped <- ggplot(long.allentown.summary)+
geom_col(aes(x = Band,
y = Count,
fill = Band))+
scale_fill_manual(values = c("All.Get.Out" = "royalblue1",
"Manchester.Orchestra" = "plum2",
"The.Front.Bottoms" = "purple"))+
ylab("Range Check")+
guides(fill = "none")+
facet_wrap(~Category)+
theme_bw()
#within range column plot
allentown.within.range.col.plot <- ggplot(within.range.filter)+
geom_col(aes(x = Band,
y = Count,
fill = Band))+
scale_fill_manual(values = c("All.Get.Out" = "royalblue1",
"Manchester.Orchestra" = "plum2",
"The.Front.Bottoms" = "purple"))+
ylab("Within Range Count")+
guides(fill = "none")+
theme_bw()
#combine graphs using patchwork library
combined.graphs <- allentown.out.of.range.col.plot + allentown.outlying.col.plot +allentown.within.range.col.plot
combined.graphs
################################################################################
# Step 3 - Create a table that summarizes select features
################################################################################
#create new tibble for count of features within range, out of range, and
#outlying for each band
allentown.summary <- stats.analysis.allentown |>
select(-Feature) |> #disregard feature column
pivot_longer(cols = everything(), #pivot data longer
names_to = "Artist",
values_to = "Category") |>
count(Artist, Category) |> #count occurrence of each category
pivot_wider(names_from = Artist, values_from = n)
allentown.summary
################################################################################
# Step 4 - Create a series of graphs to summarize impact
################################################################################
#pivot data longer to flip the coordinates
long.allentown.summary <- allentown.summary |>
pivot_longer(cols = -Category,
names_to = "Band",
values_to = "Count")
long.allentown.summary
